#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define SYM 1
#define NUM 2
#define FN  3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &kp ESC
&kp LCTRL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                         &kp LEFT_GUI  &mo 1  &kp ENTER    &kp SPACE  &kp BACKSPACE  &mo 2
            >;
        };

        lower {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR     &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH
&trans  &kp EXCL         &kp MINUS    &kp PLUS   &kp EQUAL      &kp DOT        &kp MINUS       &kp EQUAL      &kp GRAVE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans  &kp CARET        &kp FSLH     &kp STAR   &kp BACKSLASH  &kp HASH       &kp UNDERSCORE  &kp PLUS       &kp TILDE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                      &trans     &trans         &trans         &trans          &trans         &trans
            >;
        };

        raise {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5   &kp F6           &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
&trans  &trans  &trans  &kp HOME  &kp END  &kp PAGE_UP      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans    &trans   &kp PAGE_DOWN    &trans    &trans    &trans  &trans     &trans   &trans
                        &trans    &trans   &trans           &trans    &trans    &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &trans  &trans             &trans           &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2    &trans  &kp C_PLAY_PAUSE   &trans           &trans  &trans  &trans
                        &trans  &trans  &bt BT_CLR      &trans  &trans             &tog 4
            >;
        };

        gaming_layer {
            bindings = <
&kp TAB   &trans     &kp Q  &kp W  &kp E      &kp R     &trans  &trans  &trans  &trans  &trans  &trans
&kp LALT  &kp LSHFT  &kp A  &kp S  &kp D      &kp F     &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp LCTRL  &kp Z  &kp X  &kp C      &kp V     &trans  &trans  &trans  &trans  &trans  &trans
                            &mo 2  &kp SPACE  &trans    &trans  &trans  &tog 4
            >;
        };
    };
};
